-- find all SoCraTes activities
db.activitystore.find({isSoCraTes:true}).pretty()

-- find SoCraTes 2015
db.activitystore.find({url: "socrates-2015"}).pretty()
-- find SoCraTes 2016
db.eventstore.find({url: "socrates-2016"}).pretty()

-- delete SoCraTes 2015
db.activitystore.remove({url: "socrates-2015"})
-- delete SoCraTes 2016
db.eventstore.remove({url: "socrates-2016"})

-- delete all registration events:
db.eventstore.update({url: "socrates-2016"}, {$set: {"registrationEvents": []}})

-- delete the registration of a member whose id matches /git/ from SoCraTes activities
db.activitystore.update({url: "socrates-2015"}, {$pull: {"resources.bed_in_double._registeredMembers": {memberId: /git/}}})

-- delete the registration of a member whose id matches /git/ from SoCraTes activities
db.activitystore.update({url: "socrates-2015"}, {$pull: {"resources.junior._waitinglist": {_memberId: /git/}}})

-- rename a collection
db.participantstore.renameCollection( "subscriberstore" )

-- delete the participations of a subscriber whose id matches /git/
db.subscriberstore.update({id: /git/}, {$unset: {"participations": "" }})

-- delete the payment-received-notification of a member whose id matches /xlogon/
db.subscriberstore.update({id: /xlogon/}, {$unset: {"participations.2015.payment.paymentReceived": "" }})

-- update a registration in a specific room
db.activitystore.update({title: 'SoCraTes 2015', "resources.single._registeredMembers": {$elemMatch: {memberId: "github:450708"}}}, 
{$set: {"resources.single._registeredMembers.$.memberId": "github:450708"}})

-- update the memberID in a visited resource
db.activitystore.update({"url" : "neue_aktion", 'resources.Veranstaltung._registeredMembers.memberId':"github:450708" }, {$set: {'resources.Veranstaltung._registeredMembers.$.memberId': "github:450701"}})

-- delete all avatardata in members
db.memberstore.update({}, {$unset:{'avatardata':''}}, {multi:true})
