mixin text(name, label, value, tooltip, placeholder, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control(id=name, type='text', name=name, value=value, placeholder=placeholder, disabled=readonly)

mixin textWithTags(name, label, value, tags)
  .form-group
    +controlLabel(name, label, tooltip)
    input.form-control(id=name, type='hidden', name=name, value=value)
    script.
      $(#{name}).select2({
        tags: !{JSON.stringify(tags)},
        separator: ', ',
        tokenSeparators: [',', ', ']
      });

mixin multiselect(name, label, value, tags)
  .form-group
    +controlLabel(name, label, tooltip)
    select.form-control(multiple, id=name, name=name, value=value)
      each tag in tags
        option(selected = value.indexOf(tag) > -1) #{tag}
    script.
      $(#{name}).select2();


mixin currency(name, label, value, tooltip, placeholder, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control.currency(id=name, type='text', name=name, placeholder=placeholder, disabled=readonly, data-a-sign=' â‚¬', data-p-sign='s', data-a-dec=t('general.separator'), data-a-sep='')
    script.
      $('.currency').autoNumeric('init');

mixin textareaPure(name, label, value)
  +textareaInternal('form-control', '4', name, label, value)

mixin textarea(name, label, value, tooltip)
  +textareaInternal('md-textarea', '7', name, label, value, tooltip)

mixin hightextarea(name, label, value, tooltip)
  +textareaInternal('md-textarea', '15', name, label, value, tooltip)

mixin checkboxWithDescription(name, label, checked, description, optionalValue)
  .checkbox
    label
      input(type='checkbox', name=name, value=optionalValue, checked=(checked ? 'true' : undefined))
      -if (description)
        span.popover-highlight(rel='tooltip-in-body', data-content=description) #{label}
      -else
        | #{label}

mixin checkbox(name, label, checked, optionalValue)
  +checkboxWithDescription(name, label, checked, undefined, optionalValue)

mixin groupCheckboxes(checkboxName, regionalgroups, themegroups)
  .row
    .col-md-6
      +controlLabel(t('groups.regional'), t('groups.regional'))
      .form-group
        each markedGroup in regionalgroups
          +checkboxWithDescription(checkboxName, markedGroup.group.longName, markedGroup.selected, markedGroup.group.descriptionHTMLFiltered('img'), markedGroup.group.id)
    .col-md-6
      +controlLabel(t('groups.themed'), t('groups.themed'))
      .form-group
        each markedGroup in themegroups
          +checkboxWithDescription(checkboxName, markedGroup.group.longName, markedGroup.selected, markedGroup.group.descriptionHTMLFiltered('img'), markedGroup.group.id)

mixin submitButtons(submitTextToken)
  .btn-group.pull-right
    a.btn.btn-default(href='javascript:history.back()', type='cancel') #{t('general.back')}
    button.btn.btn-primary(type='submit') #{t(submitTextToken)}


mixin hidden(name, value)
  input(type='hidden', name=name, value=value)

// PICKERS
mixin date(name, label, value, tooltip)
  .form-group
    +controlLabel(name, label, tooltip)
    input.form-control.datepicker(id=name, type='text', name=name, value=value)

mixin time(name, value)
  .form-group.bootstrap-timepicker
    label.control-label(for=name) &nbsp;
    input.form-control.timepicker(id=name, type='text', name=name, value=value)

mixin colorPicker(name, value)
  .form-group
    +controlLabel(name, t('colors.color'))
    .input-group.c-picker
      span.input-group-addon: i
      input.form-control(id=name, type='text', name=name, value=value)
    script.
      $('.c-picker').colorpicker();

// PICKERS END

// SPECIAL
mixin twitter(name, label, value)
  .form-group
    +controlLabel(name, label)
    .input-group
      span.input-group-addon @
      input.form-control(id=name, type='text', name=name, value=value)

// GENERAL
mixin csrf
  +hidden('_csrf', csrf_token)

mixin controlLabel(name, label, tooltip)
  label.control-label(for=name)
    -if (tooltip)
      span.tooltiplabel(data-original-title=tooltip) #{label}:&nbsp;
        i.fa.fa-question-circle
      script.
        $('.tooltiplabel').each(function() {$(this).tooltip()})
    -else
      | #{label}:

mixin textareaInternal(classname, rowCount, name, label, value, tooltip)
  .form-group
    +controlLabel(name, label, tooltip)
    textarea(class=classname, id=name, rows=rowCount, type='text', name=name) #{value}

mixin reallyDeleteModal(header, urlForButton)
  #reallyDelete.modal.fade(tabindex='-1')
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
          h3 #{t(header)}
        .modal-body
          p #{t('general.are_you_sure')}
          .btn-group
            button.btn.btn-default(type='cancel', data-dismiss='modal', aria-hidden='true') #{t('general.no')}
            a.btn.btn-danger(href=urlForButton)
              i.fa.fa-trash-o.fa-fw &nbsp;
              | #{t('general.delete')}
  button.btn.btn-danger(data-toggle='modal', data-target='#reallyDelete'): i.fa.fa-trash-o.fa-fw

mixin imageUpload(withbuttons)
  #selectFile
    span.btn.btn-primary.btn-file(style='width: 100%')
      i.fa.fa-fw.fa-camera
      |  #{t('general.photo')}
      input#input-file(type='file', accept='image/*', name='image')
  #previewContainer(style='display: none')
    .btn-group.pull-right
      span#btn-cancel.btn.btn-default #{t('general.cancel')}
      button.btn.btn-primary(type='submit') #{t('general.submit')}
    img#preview(style='max-width: 100%; padding-top: 15px!important;')
    if withbuttons
      .btn-group(style='display: table; margin-left: auto; margin-right: auto; margin-top: 15px;')
        span#rotate-left.btn.btn-default: i.fa.fa-fw.fa-rotate-left
        span#zoom-in.btn.btn-default: i.fa.fa-fw.fa-search-plus
        span#fit.btn.btn-default: i.fa.fa-fw.fa-arrows-alt
        span#zoom-out.btn.btn-default: i.fa.fa-fw.fa-search-minus
        span#rotate-right.btn.btn-default: i.fa.fa-fw.fa-rotate-right
  script.
    $("#input-file").on("change", function () {
      if (!this.files || !this.files[0]) { return null; }
      var reader = new FileReader();
      reader.onload = function (event) {
        $("img#preview").attr("src", event.target.result);
        $("#previewContainer").slideDown();
      };
      reader.readAsDataURL(this.files[0]);
      $('#selectFile').hide();
    });
    $("#btn-cancel").click(function () {
      $("#previewContainer").slideUp(200, function () {
        $("#selectFile").show();
        // TODO: real cleanup
      });
    });

